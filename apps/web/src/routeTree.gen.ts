/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WriteRouteImport } from './routes/write'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as WriteProjectIdRouteImport } from './routes/write/$projectId'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects/$projectId'
import { Route as DashboardTeamRouteImport } from './routes/dashboard/team'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as DashboardProjectsRouteImport } from './routes/dashboard/projects'
import { Route as DashboardAiRouteImport } from './routes/dashboard/ai'
import { Route as ProjectsProjectIdCodexRouteImport } from './routes/projects/$projectId/codex'
import { Route as ProjectsProjectIdCanvasRouteImport } from './routes/projects/$projectId/canvas'
import { Route as DashboardProjectProjectIdRouteImport } from './routes/dashboard/project/$projectId'
import { Route as DashboardProjectProjectIdIndexRouteImport } from './routes/dashboard/project/$projectId/index'
import { Route as ProjectsProjectIdCodexTypeRouteImport } from './routes/projects/$projectId/codex/$type'
import { Route as DashboardProjectProjectIdSettingsRouteImport } from './routes/dashboard/project/$projectId/settings'
import { Route as DashboardProjectProjectIdOutlineRouteImport } from './routes/dashboard/project/$projectId/outline'
import { Route as DashboardProjectProjectIdCharactersRouteImport } from './routes/dashboard/project/$projectId/characters'

const WriteRoute = WriteRouteImport.update({
  id: '/write',
  path: '/write',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const WriteProjectIdRoute = WriteProjectIdRouteImport.update({
  id: '/$projectId',
  path: '/$projectId',
  getParentRoute: () => WriteRoute,
} as any)
const ProjectsProjectIdRoute = ProjectsProjectIdRouteImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardTeamRoute = DashboardTeamRouteImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardProjectsRoute = DashboardProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAiRoute = DashboardAiRouteImport.update({
  id: '/ai',
  path: '/ai',
  getParentRoute: () => DashboardRoute,
} as any)
const ProjectsProjectIdCodexRoute = ProjectsProjectIdCodexRouteImport.update({
  id: '/codex',
  path: '/codex',
  getParentRoute: () => ProjectsProjectIdRoute,
} as any)
const ProjectsProjectIdCanvasRoute = ProjectsProjectIdCanvasRouteImport.update({
  id: '/canvas',
  path: '/canvas',
  getParentRoute: () => ProjectsProjectIdRoute,
} as any)
const DashboardProjectProjectIdRoute =
  DashboardProjectProjectIdRouteImport.update({
    id: '/project/$projectId',
    path: '/project/$projectId',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardProjectProjectIdIndexRoute =
  DashboardProjectProjectIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardProjectProjectIdRoute,
  } as any)
const ProjectsProjectIdCodexTypeRoute =
  ProjectsProjectIdCodexTypeRouteImport.update({
    id: '/$type',
    path: '/$type',
    getParentRoute: () => ProjectsProjectIdCodexRoute,
  } as any)
const DashboardProjectProjectIdSettingsRoute =
  DashboardProjectProjectIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => DashboardProjectProjectIdRoute,
  } as any)
const DashboardProjectProjectIdOutlineRoute =
  DashboardProjectProjectIdOutlineRouteImport.update({
    id: '/outline',
    path: '/outline',
    getParentRoute: () => DashboardProjectProjectIdRoute,
  } as any)
const DashboardProjectProjectIdCharactersRoute =
  DashboardProjectProjectIdCharactersRouteImport.update({
    id: '/characters',
    path: '/characters',
    getParentRoute: () => DashboardProjectProjectIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/privacy': typeof PrivacyRoute
  '/register': typeof RegisterRoute
  '/terms': typeof TermsRoute
  '/write': typeof WriteRouteWithChildren
  '/dashboard/ai': typeof DashboardAiRoute
  '/dashboard/projects': typeof DashboardProjectsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/team': typeof DashboardTeamRoute
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/write/$projectId': typeof WriteProjectIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/project/$projectId': typeof DashboardProjectProjectIdRouteWithChildren
  '/projects/$projectId/canvas': typeof ProjectsProjectIdCanvasRoute
  '/projects/$projectId/codex': typeof ProjectsProjectIdCodexRouteWithChildren
  '/dashboard/project/$projectId/characters': typeof DashboardProjectProjectIdCharactersRoute
  '/dashboard/project/$projectId/outline': typeof DashboardProjectProjectIdOutlineRoute
  '/dashboard/project/$projectId/settings': typeof DashboardProjectProjectIdSettingsRoute
  '/projects/$projectId/codex/$type': typeof ProjectsProjectIdCodexTypeRoute
  '/dashboard/project/$projectId/': typeof DashboardProjectProjectIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/privacy': typeof PrivacyRoute
  '/register': typeof RegisterRoute
  '/terms': typeof TermsRoute
  '/write': typeof WriteRouteWithChildren
  '/dashboard/ai': typeof DashboardAiRoute
  '/dashboard/projects': typeof DashboardProjectsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/team': typeof DashboardTeamRoute
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/write/$projectId': typeof WriteProjectIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/projects/$projectId/canvas': typeof ProjectsProjectIdCanvasRoute
  '/projects/$projectId/codex': typeof ProjectsProjectIdCodexRouteWithChildren
  '/dashboard/project/$projectId/characters': typeof DashboardProjectProjectIdCharactersRoute
  '/dashboard/project/$projectId/outline': typeof DashboardProjectProjectIdOutlineRoute
  '/dashboard/project/$projectId/settings': typeof DashboardProjectProjectIdSettingsRoute
  '/projects/$projectId/codex/$type': typeof ProjectsProjectIdCodexTypeRoute
  '/dashboard/project/$projectId': typeof DashboardProjectProjectIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/privacy': typeof PrivacyRoute
  '/register': typeof RegisterRoute
  '/terms': typeof TermsRoute
  '/write': typeof WriteRouteWithChildren
  '/dashboard/ai': typeof DashboardAiRoute
  '/dashboard/projects': typeof DashboardProjectsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/team': typeof DashboardTeamRoute
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/write/$projectId': typeof WriteProjectIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/project/$projectId': typeof DashboardProjectProjectIdRouteWithChildren
  '/projects/$projectId/canvas': typeof ProjectsProjectIdCanvasRoute
  '/projects/$projectId/codex': typeof ProjectsProjectIdCodexRouteWithChildren
  '/dashboard/project/$projectId/characters': typeof DashboardProjectProjectIdCharactersRoute
  '/dashboard/project/$projectId/outline': typeof DashboardProjectProjectIdOutlineRoute
  '/dashboard/project/$projectId/settings': typeof DashboardProjectProjectIdSettingsRoute
  '/projects/$projectId/codex/$type': typeof ProjectsProjectIdCodexTypeRoute
  '/dashboard/project/$projectId/': typeof DashboardProjectProjectIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/privacy'
    | '/register'
    | '/terms'
    | '/write'
    | '/dashboard/ai'
    | '/dashboard/projects'
    | '/dashboard/settings'
    | '/dashboard/team'
    | '/projects/$projectId'
    | '/write/$projectId'
    | '/dashboard/'
    | '/dashboard/project/$projectId'
    | '/projects/$projectId/canvas'
    | '/projects/$projectId/codex'
    | '/dashboard/project/$projectId/characters'
    | '/dashboard/project/$projectId/outline'
    | '/dashboard/project/$projectId/settings'
    | '/projects/$projectId/codex/$type'
    | '/dashboard/project/$projectId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/privacy'
    | '/register'
    | '/terms'
    | '/write'
    | '/dashboard/ai'
    | '/dashboard/projects'
    | '/dashboard/settings'
    | '/dashboard/team'
    | '/projects/$projectId'
    | '/write/$projectId'
    | '/dashboard'
    | '/projects/$projectId/canvas'
    | '/projects/$projectId/codex'
    | '/dashboard/project/$projectId/characters'
    | '/dashboard/project/$projectId/outline'
    | '/dashboard/project/$projectId/settings'
    | '/projects/$projectId/codex/$type'
    | '/dashboard/project/$projectId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/privacy'
    | '/register'
    | '/terms'
    | '/write'
    | '/dashboard/ai'
    | '/dashboard/projects'
    | '/dashboard/settings'
    | '/dashboard/team'
    | '/projects/$projectId'
    | '/write/$projectId'
    | '/dashboard/'
    | '/dashboard/project/$projectId'
    | '/projects/$projectId/canvas'
    | '/projects/$projectId/codex'
    | '/dashboard/project/$projectId/characters'
    | '/dashboard/project/$projectId/outline'
    | '/dashboard/project/$projectId/settings'
    | '/projects/$projectId/codex/$type'
    | '/dashboard/project/$projectId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
  PrivacyRoute: typeof PrivacyRoute
  RegisterRoute: typeof RegisterRoute
  TermsRoute: typeof TermsRoute
  WriteRoute: typeof WriteRouteWithChildren
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/write': {
      id: '/write'
      path: '/write'
      fullPath: '/write'
      preLoaderRoute: typeof WriteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/write/$projectId': {
      id: '/write/$projectId'
      path: '/$projectId'
      fullPath: '/write/$projectId'
      preLoaderRoute: typeof WriteProjectIdRouteImport
      parentRoute: typeof WriteRoute
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/team': {
      id: '/dashboard/team'
      path: '/team'
      fullPath: '/dashboard/team'
      preLoaderRoute: typeof DashboardTeamRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/projects': {
      id: '/dashboard/projects'
      path: '/projects'
      fullPath: '/dashboard/projects'
      preLoaderRoute: typeof DashboardProjectsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/ai': {
      id: '/dashboard/ai'
      path: '/ai'
      fullPath: '/dashboard/ai'
      preLoaderRoute: typeof DashboardAiRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/projects/$projectId/codex': {
      id: '/projects/$projectId/codex'
      path: '/codex'
      fullPath: '/projects/$projectId/codex'
      preLoaderRoute: typeof ProjectsProjectIdCodexRouteImport
      parentRoute: typeof ProjectsProjectIdRoute
    }
    '/projects/$projectId/canvas': {
      id: '/projects/$projectId/canvas'
      path: '/canvas'
      fullPath: '/projects/$projectId/canvas'
      preLoaderRoute: typeof ProjectsProjectIdCanvasRouteImport
      parentRoute: typeof ProjectsProjectIdRoute
    }
    '/dashboard/project/$projectId': {
      id: '/dashboard/project/$projectId'
      path: '/project/$projectId'
      fullPath: '/dashboard/project/$projectId'
      preLoaderRoute: typeof DashboardProjectProjectIdRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/project/$projectId/': {
      id: '/dashboard/project/$projectId/'
      path: '/'
      fullPath: '/dashboard/project/$projectId/'
      preLoaderRoute: typeof DashboardProjectProjectIdIndexRouteImport
      parentRoute: typeof DashboardProjectProjectIdRoute
    }
    '/projects/$projectId/codex/$type': {
      id: '/projects/$projectId/codex/$type'
      path: '/$type'
      fullPath: '/projects/$projectId/codex/$type'
      preLoaderRoute: typeof ProjectsProjectIdCodexTypeRouteImport
      parentRoute: typeof ProjectsProjectIdCodexRoute
    }
    '/dashboard/project/$projectId/settings': {
      id: '/dashboard/project/$projectId/settings'
      path: '/settings'
      fullPath: '/dashboard/project/$projectId/settings'
      preLoaderRoute: typeof DashboardProjectProjectIdSettingsRouteImport
      parentRoute: typeof DashboardProjectProjectIdRoute
    }
    '/dashboard/project/$projectId/outline': {
      id: '/dashboard/project/$projectId/outline'
      path: '/outline'
      fullPath: '/dashboard/project/$projectId/outline'
      preLoaderRoute: typeof DashboardProjectProjectIdOutlineRouteImport
      parentRoute: typeof DashboardProjectProjectIdRoute
    }
    '/dashboard/project/$projectId/characters': {
      id: '/dashboard/project/$projectId/characters'
      path: '/characters'
      fullPath: '/dashboard/project/$projectId/characters'
      preLoaderRoute: typeof DashboardProjectProjectIdCharactersRouteImport
      parentRoute: typeof DashboardProjectProjectIdRoute
    }
  }
}

interface DashboardProjectProjectIdRouteChildren {
  DashboardProjectProjectIdCharactersRoute: typeof DashboardProjectProjectIdCharactersRoute
  DashboardProjectProjectIdOutlineRoute: typeof DashboardProjectProjectIdOutlineRoute
  DashboardProjectProjectIdSettingsRoute: typeof DashboardProjectProjectIdSettingsRoute
  DashboardProjectProjectIdIndexRoute: typeof DashboardProjectProjectIdIndexRoute
}

const DashboardProjectProjectIdRouteChildren: DashboardProjectProjectIdRouteChildren =
  {
    DashboardProjectProjectIdCharactersRoute:
      DashboardProjectProjectIdCharactersRoute,
    DashboardProjectProjectIdOutlineRoute:
      DashboardProjectProjectIdOutlineRoute,
    DashboardProjectProjectIdSettingsRoute:
      DashboardProjectProjectIdSettingsRoute,
    DashboardProjectProjectIdIndexRoute: DashboardProjectProjectIdIndexRoute,
  }

const DashboardProjectProjectIdRouteWithChildren =
  DashboardProjectProjectIdRoute._addFileChildren(
    DashboardProjectProjectIdRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardAiRoute: typeof DashboardAiRoute
  DashboardProjectsRoute: typeof DashboardProjectsRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardTeamRoute: typeof DashboardTeamRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardProjectProjectIdRoute: typeof DashboardProjectProjectIdRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAiRoute: DashboardAiRoute,
  DashboardProjectsRoute: DashboardProjectsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardTeamRoute: DashboardTeamRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardProjectProjectIdRoute: DashboardProjectProjectIdRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface WriteRouteChildren {
  WriteProjectIdRoute: typeof WriteProjectIdRoute
}

const WriteRouteChildren: WriteRouteChildren = {
  WriteProjectIdRoute: WriteProjectIdRoute,
}

const WriteRouteWithChildren = WriteRoute._addFileChildren(WriteRouteChildren)

interface ProjectsProjectIdCodexRouteChildren {
  ProjectsProjectIdCodexTypeRoute: typeof ProjectsProjectIdCodexTypeRoute
}

const ProjectsProjectIdCodexRouteChildren: ProjectsProjectIdCodexRouteChildren =
  {
    ProjectsProjectIdCodexTypeRoute: ProjectsProjectIdCodexTypeRoute,
  }

const ProjectsProjectIdCodexRouteWithChildren =
  ProjectsProjectIdCodexRoute._addFileChildren(
    ProjectsProjectIdCodexRouteChildren,
  )

interface ProjectsProjectIdRouteChildren {
  ProjectsProjectIdCanvasRoute: typeof ProjectsProjectIdCanvasRoute
  ProjectsProjectIdCodexRoute: typeof ProjectsProjectIdCodexRouteWithChildren
}

const ProjectsProjectIdRouteChildren: ProjectsProjectIdRouteChildren = {
  ProjectsProjectIdCanvasRoute: ProjectsProjectIdCanvasRoute,
  ProjectsProjectIdCodexRoute: ProjectsProjectIdCodexRouteWithChildren,
}

const ProjectsProjectIdRouteWithChildren =
  ProjectsProjectIdRoute._addFileChildren(ProjectsProjectIdRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
  PrivacyRoute: PrivacyRoute,
  RegisterRoute: RegisterRoute,
  TermsRoute: TermsRoute,
  WriteRoute: WriteRouteWithChildren,
  ProjectsProjectIdRoute: ProjectsProjectIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
